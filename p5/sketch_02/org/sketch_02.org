#+LANGUAGE: ru
#+TITLE: p5.js sketch 02
#+AUTHOR: Alex Lipovka
#+EMAIL: alex.lipovka@gmail.com

* Введение

Продолжение цикла программирования на p5.js с помощью [[https://www.gnu.org/software/emacs/][emacs]] с [[https://orgmode.org/][orgmode]] в стиле [[http://www.literateprogramming.com/][literate programming]].

[[rel:./sketch_02.org][Исходный код данной страницы]] и [[../index.html][результат]]. 

Экспорт исходного кода из данного файла сочетанием клавиш =C-c C-v C-t=.

* Базовый HTML-документ

#+BEGIN_SRC html
<!DOCTYPE html>
<html lang="">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>p5.js sketch 02</title>
#+END_SRC

Добавим ссылку на таблицу стилей.

#+BEGIN_SRC html
  <link rel="stylesheet" href="./styles.css">
#+END_SRC

А также ссылки на библиотеку p5.js и на исходный код нашей программы.

#+BEGIN_SRC html
  <script src="../p5.js"></script>
  <script src="./sketch.js"></script>
#+END_SRC

И завершение базового файла.

#+BEGIN_SRC html
</head>

<body>
</body>

</html>
#+END_SRC

* Таблица стилей

Таблица стилей будет вынесена в отдельный файл для большей практичности.

Сейчас основная задача — убрать поля и полосы прокрутки, которые возникнут и будт мешать восприятию, если ничего не предпринять.

#+BEGIN_SRC css
html {
    overflow: hidden;
    overflow-x: hidden;
}
body {
    padding: 0;
    margin: 0;
}
canvas {
    display: block;
}
video {
    display: block;
}

#+END_SRC

* Скетч

** Настройка области рисования

Настраиваем область рисования.

#+BEGIN_SRC javascript
function setup() {
    //стандартное создание области рисования размеров с текущее окно
    createCanvas(windowWidth, windowHeight);
}
#+END_SRC

** RGB и CMYK

Нарисуем 8 образцов по моделям RGB и CMYK.

#+BEGIN_SRC javascript
function draw() {
    background(255); //очистка окна
    noStroke(); //отключаем отрисовку обводок
    colorMode(RGB, 255); //включаем режим RGB
    let sampleWidth = width / 5;
    let sampleHeight = height / 8;
    let step = 0;
    fill(255, 0, 0); //красный (red)
    rect(0, sampleHeight * (step++), sampleWidth, sampleHeight);
    fill(0, 255, 0); //зеленый (green)
    rect(0, sampleHeight * (step++), sampleWidth, sampleHeight);
    fill(0, 0, 255); //синий (blue)
    rect(0, sampleHeight * (step++), sampleWidth, sampleHeight);
    fill(0, 255, 255); //голубой (cyan)
    rect(0, sampleHeight * (step++), sampleWidth, sampleHeight);
    fill(255, 0, 255); //пурпурный (magenta)
    rect(0, sampleHeight * (step++), sampleWidth, sampleHeight);
    fill(255, 255, 0); //желтый (yellow)
    rect(0, sampleHeight * (step++), sampleWidth, sampleHeight);
    fill(255, 255, 255); //белый (white)
    rect(0, sampleHeight * (step++), sampleWidth, sampleHeight);
    fill(0, 0, 0); //черный (black)
    rect(0, sampleHeight * (step++), sampleWidth, sampleHeight);
#+END_SRC

** RGB и HSB

#+BEGIN_SRC javascript
    sampleWidth *= 2;
    sampleHeight = height;
    let red, green, blue;
    let hue, saturation, brightness;
    //blue = hue = map(mouseX, 0, width, 0, 100);
    blue = hue = 100;
    for(let i = 0; i < sampleWidth; i++) {
        red = saturation = map(i, 0, sampleWidth, 0, 100);
        green = map(i, 0, sampleWidth, 0, 100);            
        blue = 100 - red;
        for(let j = 0; j < sampleHeight; j++) {
            brightness = map(j, 0, sampleHeight, 0, 100);
            colorMode(RGB, 100.0);
            stroke(color(red-brightness, brightness-green, blue-brightness));
            point(width / 5 + i, j);
            colorMode(HSB, 100.0);
            stroke(color(hue, saturation, brightness));
            point(width / 5 * 3 + i, j);
        }
    }
}
#+END_SRC

** Обработка изменения размера окна

#+BEGIN_SRC javascript
function windowResized() {
    //в случае изменения окна надо перестроить область рисования
    resizeCanvas(windowWidth, windowHeight);
}
#+END_SRC


* Общие настройки файла                                            :noexport:

#+DESCRIPTION: A literate programming approach to p5js coding
#+PROPERTY:    header-args:javascript  :tangle ../sketch.js
#+PROPERTY:    header-args:html :tangle ../index.html
#+PROPERTY:    header-args:css :tangle ../styles.css
#+PROPERTY:    header-args:shell  :tangle no
#+PROPERTY:    header-args        :results silent   :eval no-export   :comments org
#+OPTIONS:     skip:nil author:nil email:nil creator:nil timestamp:nil
#+INFOJS_OPT:  view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js

#+OPTIONS:     todo:nil tasks:nil tags:nil

# На выбор два варианта: без таблицы содержания
# #+OPTIONS: toc:nil num:nil
# .. и с таблицей (whn показывает до какого уровня заголовки должны нумероваться)
#+OPTIONS: num:6 whn:0 toc:6 H:6

